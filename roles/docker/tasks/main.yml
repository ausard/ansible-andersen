---

# Debian

- name: Install aptitude using apt
  apt: 
    name: aptitude
    state: latest
    update_cache: yes
    force_apt_get: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install required system packages
  apt:
    name: {{ item }}
    state: latest
    update_cache: yes
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
  when: ansible_facts['os_family'] == "Debian"

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Update apt and install docker-ce
  apt:
    update_cache: yes
    name: {{ item }}
    state: latest
    loop: [ 'docker-ce', 'docker-compose']
  when: ansible_facts['os_family'] == "Debian"
  
- name: Install Docker Module for Python
  pip:
    name: docker
  when: ansible_facts['os_family'] == 'Debian'
# CentOS


- name: Install utils
  yum: 
    name: {{ item }}
    state: latest
    loop: ['yum-utils', 'device-mapper-persistent-data', 'lvm2']
  when: ansible_facts['distribution'] == "CentOS"

- name: Add Docker repo
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
    become: yes
  when: ansible_facts['distribution'] == "CentOS"

- name: Install Docker
  yum:ll
    name: {{ item }}
    state: latest 
    become: yes
    loop: ['docker-ce', 'docker-compose']
  when: ansible_facts['distribution'] == "CentOS"
